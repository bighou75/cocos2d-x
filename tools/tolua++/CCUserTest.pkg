
enum State
{
	STT_INIT = -1,
	STT_READY,
	STT_IDLE,
	STT_ATTACK,
	STT_MOVE,
	STT_MOVE_LINE,
	STT_SINK,
	STT_DAMAGE,
	STT_DEPLOY,
	STT_DESTROY
};

enum Entry
{
	STT_ENTRY,
	STT_DOING,
	STT_EXIT
};


class CShipAI : public CCObject
{
	const char* GetName();
	int			GetParentLife();
	static CShipAI* create();

	State	GetState();
	Entry	GetEntry();
	int		GetCaptainId();

	const char* GetGroupName();
	int			GetStartPos();
	int			GetIdInGroup();
	int			GetAttackRatio();

	void  SetShipOpacity( char value );
	void  SetShipScale( int lineid );

	void	SetEnableCollision( bool val, float delay = 1.0f );
	void	OnSetCollisionDone( Node* pNode );
	int		GetLife();

	void		ReserveState( State st, float delay = 0.0f );
	void		SetState( State st_val );
	float		GetLastAccumTimeInSec();
	float		GetLastAccumTimeInRaw();
	CCPoint		GetShipPosition();
	void		SetShipPosition( CCPoint pos );

	void		OrderLine( int id, float time = 1, float delay = 0 );
	void		OrderMove( float time, CCPoint pos, float delay = 0 );
	void		OrderMove( CCPoint delta, CCPoint pos, float delay = 0 );
	void		OrderIdle( float idleTime = 0.0f, float delay = 0 );
	void		OrderAttack( int attackCount, int attackDelay, float delay = 0 );

	bool		IsMoveState();
	bool		IsAttackState();

	void		StopMove();
	void		StopAttack();
	int			GetCannonballCount();

	const char* GetGroupName();
	int			GetStartPos();
	int			GetIdInGroup();
	int			GetCountInGroup();

	void		SetShipScale( int lineid );

	int			GetLinePos( int lineid );
	bool		IsGroupReady();
	void		SetGroupReady( bool val );
	int			GetGroupRandomActiveId();
	int			GetObjID();
	void		SetShipLine( int line, bool force = true );
	bool		IsConnectedWaveMgr();

};
